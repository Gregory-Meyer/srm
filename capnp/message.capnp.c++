// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: message.capnp

#include "message.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<32> b_93c2012830d68d3c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     60, 141, 214,  48,  40,   1, 194, 147,
     14,   0,   0,   0,   1,   0,   0,   0,
     68, 172, 214,  51, 178, 117,  82, 222,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  77, 101,
    115, 115,  97, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_93c2012830d68d3c = b_93c2012830d68d3c.words;
#if !CAPNP_LITE
static const uint16_t m_93c2012830d68d3c[] = {0};
static const uint16_t i_93c2012830d68d3c[] = {0};
const ::capnp::_::RawSchema s_93c2012830d68d3c = {
  0x93c2012830d68d3c, b_93c2012830d68d3c.words, 32, nullptr, m_93c2012830d68d3c,
  0, 1, i_93c2012830d68d3c, nullptr, nullptr, { &s_93c2012830d68d3c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Message
constexpr uint16_t Message::_capnpPrivate::dataWordSize;
constexpr uint16_t Message::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Message::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Message::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



